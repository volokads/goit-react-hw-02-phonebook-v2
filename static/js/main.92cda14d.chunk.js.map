{"version":3,"sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsLiElem/ContactsLiElem.jsx","components/Contacts/Contacts.jsx","App.js","index.js"],"names":["Form","state","name","number","formChange","e","target","value","setState","formSubmit","preventDefault","props","onSubmit","className","id","nanoid","type","this","pattern","title","required","onChange","autoComplete","onClick","Component","Filter","ContactsLiElem","Contacts","names","map","elem","App","contacts","filter","handleChange","forSubmit","obj","find","contact","alert","prev","contactsFilter","toLowerCase","includes","toLocaleLowerCase","deleteContact","prevState","parentNode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92cda14d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    formChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"SearchForm\">\r\n                <label className=\"SearchForm__Label\">Name</label>\r\n                <input\r\n                    className=\"SearchForm__Item\"\r\n                    id={nanoid()}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                    onChange={this.formChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label className=\"SearchForm__Label\">Phone number</label>\r\n                <input\r\n                    className=\"SearchForm__Item\"\r\n                    id={nanoid()}\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                    onChange={this.formChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <button className=\"Btn\" type=\"submit\" onClick={this.formSubmit}>Add contact</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\nexport {Form}","function Filter({ value, onChange }) {\r\n    return (\r\n        <>\r\n            <label>\r\n                Find contacts by name\r\n            </label>\r\n            <input\r\n                className=\"ContactForm__Item\"\r\n                name=\"filter\"\r\n                type=\"text\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Введите имя которое ищите\"\r\n                autoComplete=\"off\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Filter}","function ContactsLiElem({ id, name, number, onClick }) {\r\n    return (\r\n        <li id={id} key={id}>\r\n            <span>{name}: {number}</span>\r\n            <button className='Btn' type=\"button\" onClick={onClick}>Delete</button>\r\n    </li>\r\n)\r\n}\r\nexport default ContactsLiElem","import ContactsLiElem from \"../ContactsLiElem/ContactsLiElem\";\r\n\r\nfunction Contacts({ names, onClick }) {\r\n    return ( \r\n        <ul>\r\n            {names().map(elem => {\r\n                return (\r\n                    <ContactsLiElem\r\n                        id={elem.id}\r\n                        name={elem.name}\r\n                        number={elem.number}\r\n                        onClick={onClick}\r\n                        key={elem.id}\r\n                    />)\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\nexport  {Contacts}","import './App.css';\nimport { nanoid } from 'nanoid';\nimport { Component } from 'react';\nimport { Form } from './components/Form/Form.jsx'\nimport { Filter } from \"./components/Filter/Filter.jsx\"\nimport {Contacts} from \"./components/Contacts/Contacts.jsx\"\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: \"\",\n  }\n  // filterId = nanoid()\n\n  handleChange = (e) => {\n    const {name, value} = e.target\n    this.setState( {[name]: value })}\n\n  forSubmit = (obj) => {\n    const findContact = this.state.contacts.find(contact => {\n      return contact.name === obj.name;\n    })\n    if (findContact) {\n      return alert (`${obj.name} is already in phonebook`)\n    }\n    this.setState(prev => ({\n      contacts: [{id: nanoid(),...obj}, ...prev.contacts ]\n    }))\n  }\n  contactsFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact => {\n      if (contact.name.toLowerCase().includes(filter.toLocaleLowerCase())) {\n        return contact;\n      }\n    });\n  };\n  deleteContact = e => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => {\n        return contact.id !== e.target.parentNode.id;\n      }),\n    }));\n  };\n\n  render ()\n  {\n    return (\n      <div className=\"App\">\n        <div>\n          <h2>PhoneBook</h2>\n          <Form onSubmit={ this.forSubmit}/>\n        </div>\n        <div className=\"Contacts\">\n          <h2>Contacts</h2>\n          <Filter\n            value={this.state.filter}\n            onChange={this.handleChange}\n          />\n          <Contacts\n            names={this.contactsFilter} onClick={ this.deleteContact }\n          />\n        </div>\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}